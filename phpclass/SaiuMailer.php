<?php/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. *//** * Description of SaiuMailer2 * * @author marco */require_once 'saiumailer/PHPMailerAutoload.php';class SaiuMailer {    private $from="";    private $fromName="";    private $to="";    private $body="";    private $subject="";    private $cfg="";    private $host="";    private $username="";    private $psw="";    private $bcc=array();  // è un vettore    private $attach=array();  // è un vettore        //getters and setters    function getAttach() {        return $this->attach;    }    function setAttach($attach) {        $this->attach = $attach;    }        public function getBcc() {        return $this->bcc;    }    public function setBcc($bcc) {        $this->bcc = $bcc;    }        public function getFrom() {        return $this->from;    }    public function getFromName() {        return $this->fromName;    }    public function getTo() {        return $this->to;    }    public function getBody() {        return $this->body;    }    public function getSubject() {        return $this->subject;    }    public function getCfg() {        return $this->cfg;    }    public function getHost() {        return $this->host;    }    public function getUsername() {        return $this->username;    }    public function getPsw() {        return $this->psw;    }    public function setFrom($from) {        $this->from = $from;    }    public function setFromName($fromName) {        $this->fromName = $fromName;    }    public function setTo($to) {        $this->to = $to;    }    public function setBody($body) {        $this->body = $body;    }    public function setSubject($subject) {        $this->subject = $subject;    }    public function setCfg($cfg) {        $this->cfg = $cfg;    }    public function setHost($host) {        $this->host = $host;    }    public function setUsername($username) {        $this->username = $username;    }    public function setPsw($psw) {        $this->psw = $psw;    }        //fine getters and setters             function __construct() {        date_default_timezone_set('Etc/UTC');                    }    public function addBcc($indirizzo)    {     //   echo "sto aggiungendo il valore ".$indirizzo." al BCC che ora ha ".count($this->getBcc())." valori<br>";        $this->bcc[]=$indirizzo;    } public function addAttach($att)    {     //   echo "sto aggiungendo il valore ".$indirizzo." al BCC che ora ha ".count($this->getBcc())." valori<br>";        $this->attach[]=$att;    }    //put your code here    private function setting() {         $cfg=parse_ini_file(dirname(__FILE__) . "/cfg.ini",true);         $this->setHost($cfg[mail][host]);         $this->setUsername($cfg[mail][username]);         $this->setPsw($cfg[mail][password]);         $this->setFrom($cfg[mail][from]);       //  echo $this->getFrom();         $this->setFromName($cfg[mail][fromname]);         $this->setTo($cfg[mail][to]);    }            public function send() {        //verifica impostazioni poi manda        $mail = new PHPMailer();        //Tell PHPMailer to use SMTP        $mail->isSMTP();        $mail->CharSet = "UTF-8";        //Enable SMTP debugging        // 0 = off (for production use)        // 1 = client messages        // 2 = client and server messages        $mail->SMTPDebug = 0;        //Ask for HTML-friendly debug output        $mail->Debugoutput = 'html';        //Set the hostname of the mail server        $mail->Host = $this->getHost();        //Set the SMTP port number - likely to be 25, 465 or 587        $mail->Port = 25;        //Whether to use SMTP authentication        $mail->SMTPAuth = true;        //Username to use for SMTP authentication        $mail->Username = $this->getUsername();        //Password to use for SMTP authentication        $mail->Password = $this->getPsw();        //Set who the message is to be sent from        $mail->setFrom($this->getFrom(), $this->getFromName());        //Set an alternative reply-to address        $mail->addReplyTo($this->getFrom(), $this->getFromName());        //Set who the message is to be sent to        $mail->addAddress($this->getTo());        if($this->getBcc()!="")        {            $i=0;            $b=  $this->getBcc();           // echo "<br>numero elementi:".count($b);            while($i<count($b))            {                $mail->addBCC($b[$i]);               //  echo "<br>bcc:". $i.$b[$i];                $i++;            }        }        if($this->getAttach()!="") //caso in cui ci sono attachment        {            foreach ($this->getAttach() as $value) {                $mail->addAttachment($value);            }        }                //Set the subject line        $mail->Subject = $this->getSubject();        //Read an HTML message body from an external file, convert referenced images to embedded,        //convert HTML into a basic plain-text alternative body        //$mail->msgHTML(file_get_contents('contents.html'), dirname(__FILE__));        $mail->msgHTML($this->getBody());        //Replace the plain text body with one created manually        $mail->AltBody = 'This is a plain-text message body';        //Attach an image file        //$mail->addAttachment('images/phpmailer_mini.png');        //send the message, check for errors       // echo "mandandolo";        if (!$mail->send()) {            // echo "Mailer Error: " . $mail->ErrorInfo;        } else {        echo "";        }                                                                                    }    public static function sendSimpleEmail($to,$subject,$body,$from="")    {        $m= new SaiuMailer();        $m->setting();        $m->setBody($body);        $m->setSubject($subject);        $m->setTo($to);        //echo "siamo quasi al send";        if(!$m->send()) return false;        else return true;    }    public static function Email($to,$subject,$body,$from="",$fromName="",$ArrBcc="",$arrAttach="")    {       $m= new SaiuMailer();        $m->setting();        $m->setBody($body);        $m->setSubject($subject);        if($to!="")            $m->setTo($to);        if($from!="")            $m->setFrom($from);        if($fromName!="")            $m->setFromName($fromName);       if(count($ArrBcc)>0)       {           foreach ($ArrBcc as $v) {               $m->addBcc($v);           }       }       if(count($arrAttach)>0)       {           foreach ($arrAttach as $v) {               $m->addAttach($v);           }       }                          //echo "siamo quasi al send";        if(!$m->send()) return false;        else return true;            }                public static function sendEmail($to,$subject,$body,$from="",$fromName="",$bcc1="",$bcc2="",$bcc3="")    {        $m= new SaiuMailer();        $m->setting();        $m->setBody($body);        $m->setSubject($subject);        if($to!="")            $m->setTo($to);        if($from!="")            $m->setFrom($from);        if($fromName!="")            $m->setFromName($fromName);        if($bcc1!="")             {$m->addBcc($bcc1);}        if($bcc2!="")             {$m->addBcc($bcc2);}        if($bcc3!="")            {$m->addBcc($bcc3);}        //echo "siamo quasi al send";        if(!$m->send()) return false;        else return true;            }}